{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useRef, useEffect, useState } from \"react\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StarIcon from \"./StarIcon\";\nimport { getStars } from \"./utils\";\nvar defaultColor = \"#fdd835\";\nvar defaultAnimationConfig = {\n  easing: Easing.elastic(2),\n  duration: 300,\n  scale: 1.2,\n  delay: 300\n};\nvar StarRating = function StarRating(_ref) {\n  var rating = _ref.rating,\n    _ref$maxStars = _ref.maxStars,\n    maxStars = _ref$maxStars === void 0 ? 5 : _ref$maxStars,\n    _ref$starSize = _ref.starSize,\n    starSize = _ref$starSize === void 0 ? 32 : _ref$starSize,\n    onChange = _ref.onChange,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? defaultColor : _ref$color,\n    _ref$emptyColor = _ref.emptyColor,\n    emptyColor = _ref$emptyColor === void 0 ? color : _ref$emptyColor,\n    _ref$enableHalfStar = _ref.enableHalfStar,\n    enableHalfStar = _ref$enableHalfStar === void 0 ? true : _ref$enableHalfStar,\n    _ref$enableSwiping = _ref.enableSwiping,\n    enableSwiping = _ref$enableSwiping === void 0 ? true : _ref$enableSwiping,\n    _ref$animationConfig = _ref.animationConfig,\n    animationConfig = _ref$animationConfig === void 0 ? defaultAnimationConfig : _ref$animationConfig,\n    style = _ref.style,\n    starStyle = _ref.starStyle,\n    testID = _ref.testID;\n  var width = useRef();\n  var ref = useRef(null);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isInteracting = _useState2[0],\n    setInteracting = _useState2[1];\n  var handleInteraction = function handleInteraction(x) {\n    if (width.current) {\n      var newRating = Math.max(0, Math.min(Math.round(x / width.current * maxStars * 2 + 0.2) / 2, maxStars));\n      onChange(enableHalfStar ? newRating : Math.ceil(newRating));\n    }\n  };\n  var _useState3 = useState(function () {\n      return PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n          return true;\n        },\n        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {\n          return true;\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {\n          return true;\n        },\n        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n          return true;\n        },\n        onPanResponderMove: function onPanResponderMove(e) {\n          if (enableSwiping) {\n            handleInteraction(e.nativeEvent.locationX);\n          }\n        },\n        onPanResponderStart: function onPanResponderStart(e) {\n          handleInteraction(e.nativeEvent.locationX);\n          setInteracting(true);\n        },\n        onPanResponderEnd: function onPanResponderEnd() {\n          setTimeout(function () {\n            setInteracting(false);\n          }, animationConfig.delay || defaultAnimationConfig.delay);\n        }\n      });\n    }),\n    _useState4 = _slicedToArray(_useState3, 1),\n    panResponder = _useState4[0];\n  return React.createElement(View, _extends({\n    ref: ref,\n    style: [styles.starRating, style]\n  }, panResponder.panHandlers, {\n    onLayout: function onLayout() {\n      if (ref.current) {\n        ref.current.measure(function (_x, _y, w, _h) {\n          return width.current = w;\n        });\n      }\n    },\n    testID: testID\n  }), getStars(rating, maxStars).map(function (starType, i) {\n    return React.createElement(AnimatedIcon, {\n      key: i,\n      active: isInteracting && rating - i >= 0.5,\n      animationConfig: animationConfig,\n      style: starStyle\n    }, React.createElement(StarIcon, {\n      type: starType,\n      size: starSize,\n      color: starType === \"empty\" ? emptyColor : color\n    }));\n  }));\n};\nvar AnimatedIcon = function AnimatedIcon(_ref2) {\n  var active = _ref2.active,\n    animationConfig = _ref2.animationConfig,\n    children = _ref2.children,\n    style = _ref2.style;\n  var _animationConfig$scal = animationConfig.scale,\n    scale = _animationConfig$scal === void 0 ? defaultAnimationConfig.scale : _animationConfig$scal,\n    _animationConfig$easi = animationConfig.easing,\n    easing = _animationConfig$easi === void 0 ? defaultAnimationConfig.easing : _animationConfig$easi,\n    _animationConfig$dura = animationConfig.duration,\n    duration = _animationConfig$dura === void 0 ? defaultAnimationConfig.duration : _animationConfig$dura;\n  var animatedSize = useRef(new Animated.Value(active ? scale : 1));\n  useEffect(function () {\n    var animation = Animated.timing(animatedSize.current, {\n      toValue: active ? scale : 1,\n      useNativeDriver: true,\n      easing: easing,\n      duration: duration\n    });\n    animation.start();\n    return animation.stop;\n  }, [active, scale, easing, duration]);\n  return React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [styles.star, style, {\n      transform: [{\n        scale: animatedSize.current\n      }]\n    }]\n  }, children);\n};\nvar styles = StyleSheet.create({\n  starRating: {\n    flexDirection: \"row\",\n    alignSelf: \"flex-start\"\n  },\n  star: {\n    marginHorizontal: 5\n  }\n});\nexport default StarRating;","map":{"version":3,"names":["React","useRef","useEffect","useState","PanResponder","StyleSheet","View","Animated","Easing","StarIcon","getStars","defaultColor","defaultAnimationConfig","easing","elastic","duration","scale","delay","StarRating","_ref","rating","_ref$maxStars","maxStars","_ref$starSize","starSize","onChange","_ref$color","color","_ref$emptyColor","emptyColor","_ref$enableHalfStar","enableHalfStar","_ref$enableSwiping","enableSwiping","_ref$animationConfig","animationConfig","style","starStyle","testID","width","ref","_useState","_useState2","_slicedToArray","isInteracting","setInteracting","handleInteraction","x","current","newRating","Math","max","min","round","ceil","_useState3","create","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","e","nativeEvent","locationX","onPanResponderStart","onPanResponderEnd","setTimeout","_useState4","panResponder","createElement","_extends","styles","starRating","panHandlers","onLayout","measure","_x","_y","w","_h","map","starType","i","AnimatedIcon","key","active","type","size","_ref2","children","_animationConfig$scal","_animationConfig$easi","_animationConfig$dura","animatedSize","Value","animation","timing","toValue","useNativeDriver","start","stop","pointerEvents","star","transform","flexDirection","alignSelf","marginHorizontal"],"sources":["/home/bassant/NewReactTmdb/TMDB-The-Movie-Database/node_modules/react-native-star-rating-widget/lib/module/StarRating.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport {\n    PanResponder,\n    StyleSheet,\n    View,\n    StyleProp,\n    ViewStyle,\n    Animated,\n    Easing,\n} from \"react-native\";\nimport StarIcon from \"./StarIcon\";\nimport { getStars } from \"./utils\";\n\ntype AnimationConfig = {\n    easing?: (value: number) => number;\n    duration?: number;\n    delay?: number;\n    scale?: number;\n};\n\ntype StarRatingProps = {\n    rating: number;\n    onChange: (rating: number) => void;\n    minRating?: number;\n    color?: string;\n    emptyColor?: string;\n    maxStars?: number;\n    starSize?: number;\n    enableHalfStar?: boolean;\n    enableSwiping?: boolean;\n    style?: StyleProp<ViewStyle>;\n    starStyle?: StyleProp<ViewStyle>;\n    animationConfig?: AnimationConfig;\n    testID?: string;\n};\n\nconst defaultColor = \"#fdd835\";\nconst defaultAnimationConfig: Required<AnimationConfig> = {\n    easing: Easing.elastic(2),\n    duration: 300,\n    scale: 1.2,\n    delay: 300,\n};\n\nconst StarRating: React.FC<StarRatingProps> = ({\n    rating,\n    maxStars = 5,\n    starSize = 32,\n    onChange,\n    color = defaultColor,\n    emptyColor = color,\n    enableHalfStar = true,\n    enableSwiping = true,\n    animationConfig = defaultAnimationConfig,\n    style,\n    starStyle,\n    testID,\n}) => {\n    const width = useRef<number>();\n    const ref = useRef<View>(null);\n    const [isInteracting, setInteracting] = useState(false);\n\n    const handleInteraction = (x: number) => {\n        if (width.current) {\n            const newRating = Math.max(\n                0,\n                Math.min(\n                    Math.round((x / width.current) * maxStars * 2 + 0.2) / 2,\n                    maxStars\n                )\n            );\n            onChange(enableHalfStar ? newRating : Math.ceil(newRating));\n        }\n    };\n\n    const [panResponder] = useState(() =>\n        PanResponder.create({\n            onStartShouldSetPanResponder: () => true,\n            onStartShouldSetPanResponderCapture: () => true,\n            onMoveShouldSetPanResponder: () => true,\n            onMoveShouldSetPanResponderCapture: () => true,\n            onPanResponderMove: e => {\n                if (enableSwiping) {\n                    handleInteraction(e.nativeEvent.locationX);\n                }\n            },\n            onPanResponderStart: e => {\n                handleInteraction(e.nativeEvent.locationX);\n                setInteracting(true);\n            },\n            onPanResponderEnd: () => {\n                setTimeout(() => {\n                    setInteracting(false);\n                }, animationConfig.delay || defaultAnimationConfig.delay);\n            },\n        })\n    );\n\n    return (\n        <View\n            ref={ref}\n            style={[styles.starRating, style]}\n            {...panResponder.panHandlers}\n            onLayout={() => {\n                if (ref.current) {\n                    ref.current.measure((_x, _y, w, _h) => (width.current = w));\n                }\n            }}\n            testID={testID}>\n            {getStars(rating, maxStars).map((starType, i) => {\n                return (\n                    <AnimatedIcon\n                        key={i}\n                        active={isInteracting && rating - i >= 0.5}\n                        animationConfig={animationConfig}\n                        style={starStyle}>\n                        <StarIcon\n                            type={starType}\n                            size={starSize}\n                            color={starType === \"empty\" ? emptyColor : color}\n                        />\n                    </AnimatedIcon>\n                );\n            })}\n        </View>\n    );\n};\n\ntype AnimatedIconProps = {\n    active: boolean;\n    children: React.ReactElement;\n    animationConfig: AnimationConfig;\n    style?: StyleProp<ViewStyle>;\n};\n\nconst AnimatedIcon: React.FC<AnimatedIconProps> = ({\n    active,\n    animationConfig,\n    children,\n    style,\n}) => {\n    const {\n        scale = defaultAnimationConfig.scale,\n        easing = defaultAnimationConfig.easing,\n        duration = defaultAnimationConfig.duration,\n    } = animationConfig;\n\n    const animatedSize = useRef(new Animated.Value(active ? scale : 1));\n\n    useEffect(() => {\n        const animation = Animated.timing(animatedSize.current, {\n            toValue: active ? scale : 1,\n            useNativeDriver: true,\n            easing,\n            duration,\n        });\n\n        animation.start();\n        return animation.stop;\n    }, [active, scale, easing, duration]);\n\n    return (\n        <Animated.View\n            pointerEvents=\"none\"\n            style={[\n                styles.star,\n                style,\n                {\n                    transform: [\n                        {\n                            scale: animatedSize.current,\n                        },\n                    ],\n                },\n            ]}>\n            {children}\n        </Animated.View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    starRating: {\n        flexDirection: \"row\",\n        alignSelf: \"flex-start\",\n    },\n    star: {\n        marginHorizontal: 5,\n    },\n});\n\nexport default StarRating;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}