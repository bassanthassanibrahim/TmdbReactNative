{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport ExponentSpeech from \"./ExponentSpeech\";\nimport { VoiceQuality } from \"./Speech.types\";\nvar SpeechEventEmitter = ExponentSpeech && new NativeEventEmitter(ExponentSpeech);\nexport { VoiceQuality };\nvar _CALLBACKS = {};\nvar _nextCallbackId = 1;\nvar _didSetListeners = false;\nfunction _unregisterListenersIfNeeded() {\n  if (Object.keys(_CALLBACKS).length === 0) {\n    removeSpeakingListener('Exponent.speakingStarted');\n    removeSpeakingListener('Exponent.speakingDone');\n    removeSpeakingListener('Exponent.speakingStopped');\n    removeSpeakingListener('Exponent.speakingError');\n    _didSetListeners = false;\n  }\n}\nfunction _registerListenersIfNeeded() {\n  if (_didSetListeners) return;\n  _didSetListeners = true;\n  setSpeakingListener('Exponent.speakingStarted', function (_ref) {\n    var id = _ref.id;\n    var options = _CALLBACKS[id];\n    if (options && options.onStart) {\n      options.onStart();\n    }\n  });\n  setSpeakingListener('Exponent.speakingDone', function (_ref2) {\n    var id = _ref2.id;\n    var options = _CALLBACKS[id];\n    if (options && options.onDone) {\n      options.onDone();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingStopped', function (_ref3) {\n    var id = _ref3.id;\n    var options = _CALLBACKS[id];\n    if (options && options.onStopped) {\n      options.onStopped();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingError', function (_ref4) {\n    var id = _ref4.id,\n      error = _ref4.error;\n    var options = _CALLBACKS[id];\n    if (options && options.onError) {\n      options.onError(new Error(error));\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n}\nexport function speak(text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var id = _nextCallbackId++;\n  _CALLBACKS[id] = options;\n  _registerListenersIfNeeded();\n  ExponentSpeech.speak(String(id), text, options);\n}\nexport function getAvailableVoicesAsync() {\n  return _regeneratorRuntime.async(function getAvailableVoicesAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (ExponentSpeech.getVoices) {\n            _context.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('Speech', 'getVoices');\n        case 2:\n          return _context.abrupt(\"return\", ExponentSpeech.getVoices());\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isSpeakingAsync() {\n  return _regeneratorRuntime.async(function isSpeakingAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", ExponentSpeech.isSpeaking());\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function stop() {\n  return _regeneratorRuntime.async(function stop$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.abrupt(\"return\", ExponentSpeech.stop());\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function pause() {\n  return _regeneratorRuntime.async(function pause$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (ExponentSpeech.pause) {\n            _context4.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('Speech', 'pause');\n        case 2:\n          return _context4.abrupt(\"return\", ExponentSpeech.pause());\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function resume() {\n  return _regeneratorRuntime.async(function resume$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (ExponentSpeech.resume) {\n            _context5.next = 2;\n            break;\n          }\n          throw new UnavailabilityError('Speech', 'resume');\n        case 2:\n          return _context5.abrupt(\"return\", ExponentSpeech.resume());\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nfunction setSpeakingListener(eventName, callback) {\n  var listenerCount = SpeechEventEmitter.listenerCount ? SpeechEventEmitter.listenerCount(eventName) : SpeechEventEmitter.listeners(eventName).length;\n  if (listenerCount > 0) {\n    SpeechEventEmitter.removeAllListeners(eventName);\n  }\n  SpeechEventEmitter.addListener(eventName, callback);\n}\nfunction removeSpeakingListener(eventName) {\n  SpeechEventEmitter.removeAllListeners(eventName);\n}\nexport var maxSpeechInputLength = ExponentSpeech.maxSpeechInputLength || Number.MAX_VALUE;","map":{"version":3,"names":["UnavailabilityError","NativeEventEmitter","ExponentSpeech","VoiceQuality","SpeechEventEmitter","_CALLBACKS","_nextCallbackId","_didSetListeners","_unregisterListenersIfNeeded","Object","keys","length","removeSpeakingListener","_registerListenersIfNeeded","setSpeakingListener","_ref","id","options","onStart","_ref2","onDone","_ref3","onStopped","_ref4","error","onError","Error","speak","text","arguments","undefined","String","getAvailableVoicesAsync","_regeneratorRuntime","async","getAvailableVoicesAsync$","_context","prev","next","getVoices","abrupt","stop","Promise","isSpeakingAsync","isSpeakingAsync$","_context2","isSpeaking","stop$","_context3","pause","pause$","_context4","resume","resume$","_context5","eventName","callback","listenerCount","listeners","removeAllListeners","addListener","maxSpeechInputLength","Number","MAX_VALUE"],"sources":["/home/bassant/NewReactTmdb/TMDB-The-Movie-Database/node_modules/expo-speech/src/Speech/Speech.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\nimport { NativeEventEmitter } from 'react-native';\n\nimport ExponentSpeech from './ExponentSpeech';\nimport { SpeechOptions, SpeechEventCallback, VoiceQuality, Voice, WebVoice } from './Speech.types';\n\nconst SpeechEventEmitter = ExponentSpeech && new NativeEventEmitter(ExponentSpeech);\n\nexport { SpeechOptions, SpeechEventCallback, VoiceQuality, Voice, WebVoice };\n\nconst _CALLBACKS = {};\nlet _nextCallbackId = 1;\nlet _didSetListeners = false;\n\nfunction _unregisterListenersIfNeeded() {\n  if (Object.keys(_CALLBACKS).length === 0) {\n    removeSpeakingListener('Exponent.speakingStarted');\n    removeSpeakingListener('Exponent.speakingDone');\n    removeSpeakingListener('Exponent.speakingStopped');\n    removeSpeakingListener('Exponent.speakingError');\n    _didSetListeners = false;\n  }\n}\n\nfunction _registerListenersIfNeeded() {\n  if (_didSetListeners) return;\n  _didSetListeners = true;\n  setSpeakingListener('Exponent.speakingStarted', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onStart) {\n      options.onStart();\n    }\n  });\n  setSpeakingListener('Exponent.speakingDone', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onDone) {\n      options.onDone();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingStopped', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onStopped) {\n      options.onStopped();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingError', ({ id, error }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onError) {\n      options.onError(new Error(error));\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n}\n\n// @needsAudit\n/**\n * Speak out loud the text given options. Calling this when another text is being spoken adds\n * an utterance to queue.\n * @param text The text to be spoken. Cannot be longer than [`Speech.maxSpeechInputLength`](#speechmaxspeechinputlength).\n * @param options A `SpeechOptions` object.\n */\nexport function speak(text: string, options: SpeechOptions = {}) {\n  const id = _nextCallbackId++;\n  _CALLBACKS[id] = options;\n  _registerListenersIfNeeded();\n  ExponentSpeech.speak(String(id), text, options);\n}\n\n// @needsAudit\n/**\n * Returns list of all available voices.\n * @return List of `Voice` objects.\n */\nexport async function getAvailableVoicesAsync(): Promise<Voice[]> {\n  if (!ExponentSpeech.getVoices) {\n    throw new UnavailabilityError('Speech', 'getVoices');\n  }\n  return ExponentSpeech.getVoices();\n}\n\n//@needsAudit\n/**\n * Determine whether the Text-to-speech utility is currently speaking. Will return `true` if speaker\n * is paused.\n * @return Returns a Promise that fulfils with a boolean, `true` if speaking, `false` if not.\n */\nexport async function isSpeakingAsync(): Promise<boolean> {\n  return ExponentSpeech.isSpeaking();\n}\n\n// @needsAudit\n/**\n * Interrupts current speech and deletes all in queue.\n */\nexport async function stop(): Promise<void> {\n  return ExponentSpeech.stop();\n}\n\n// @needsAudit\n/**\n * Pauses current speech. This method is not available on Android.\n */\nexport async function pause(): Promise<void> {\n  if (!ExponentSpeech.pause) {\n    throw new UnavailabilityError('Speech', 'pause');\n  }\n  return ExponentSpeech.pause();\n}\n\n// @needsAudit\n/**\n * Resumes speaking previously paused speech or does nothing if there's none. This method is not\n * available on Android.\n */\nexport async function resume(): Promise<void> {\n  if (!ExponentSpeech.resume) {\n    throw new UnavailabilityError('Speech', 'resume');\n  }\n\n  return ExponentSpeech.resume();\n}\n\nfunction setSpeakingListener(eventName, callback) {\n  // @ts-ignore: the EventEmitter interface has been changed in react-native@0.64.0\n  const listenerCount = SpeechEventEmitter.listenerCount\n    ? // @ts-ignore: this is available since 0.64\n      SpeechEventEmitter.listenerCount(eventName)\n    : // @ts-ignore: this is available in older versions\n      SpeechEventEmitter.listeners(eventName).length;\n  if (listenerCount > 0) {\n    SpeechEventEmitter.removeAllListeners(eventName);\n  }\n  SpeechEventEmitter.addListener(eventName, callback);\n}\n\nfunction removeSpeakingListener(eventName) {\n  SpeechEventEmitter.removeAllListeners(eventName);\n}\n\n// @needsAudit\n/**\n * Maximum possible text length acceptable by `Speech.speak()` method. It is platform-dependent.\n * On iOS, this returns `Number.MAX_VALUE`.\n */\nexport const maxSpeechInputLength: number = ExponentSpeech.maxSpeechInputLength || Number.MAX_VALUE;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}